// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Page {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  blocks    Block[]
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Block {
  id      String @id @default(cuid())
  type    String // "hero", "cards", "gallery", "text"
  variant String // "full", "split", etc.
  props   Json   // Contenuto del blocco
  order   Int    // Ordine nella pagina
  pageId  String
  page    Page   @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@map("blocks")
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  password String?
  name     String?
  accounts Account[]
  sessions Session[]
}

model Settings {
  id    String @id @default(cuid())
  key   String @unique
  value String

  @@map("settings")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
